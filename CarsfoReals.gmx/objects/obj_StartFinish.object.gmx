<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_StartFinish</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Initialize StartFinish

randomize();

race_grid = ds_grid_create(5, 4);
race_grid_new = ds_grid_create(5, 4);
player_id = instance_find(obj_Player, 0);

NPC_name[0] = "Bob";
NPC_name[1] = "George";
NPC_name[2] = "Clancy";
NPC_name[3] = "Cheryl";
NPC_name[4] = "Your Mom";
NPC_name[5] = "Harold";
NPC_name[6] = "Jimmy";
NPC_name[7] = "Gertrude";
NPC_name[8] = "Phil";
NPC_name[9] = "Gerry";

var i;
var i2;

for(i = 0; i &lt; instance_number(obj_NPC); i += 1){
   NPC_id[i] = instance_find(obj_NPC, i);
}

//Setting up the grid
for(i = 0; i &lt; 5; i++){
    for(i2 = 0; i2 &lt; 4; i2++){
        if(i = 0 &amp;&amp; i2 = 0){
            ds_grid_set(race_grid, i, i2, player_id);
        }else if(i = 0 &amp;&amp; i2 &gt; 0){
            ds_grid_set(race_grid, i, i2, NPC_id[i2 - 1]);
        }else if(i = 1 &amp;&amp; i2 = 0){
            ds_grid_set(race_grid, i, i2, "Player 1");
        }else if(i = 1 &amp;&amp; i2 &gt; 0){
            ds_grid_set(race_grid, i, i2, string(NPC_name[irandom(9)]));
        }else if(i = 2 &amp;&amp; i2 = 0){
            ds_grid_set(race_grid, i, i2, player_id.current_distance);
        }else if(i = 2 &amp;&amp; i2 &gt; 0){
            ds_grid_set(race_grid, i, i2, NPC_id[i2 - 1].current_distance);
        }else if(i = 3 &amp;&amp; i2 = 0){
            ds_grid_set(race_grid, i, i2, player_id.current_node);
        }else if(i = 3 &amp;&amp; i2 &gt; 0){
            ds_grid_set(race_grid, i, i2, NPC_id[i2 - 1].current_node);
        }else if(i = 4 &amp;&amp; i2 = 0){
            ds_grid_set(race_grid, i, i2, player_id.lap);
        }else if(i = 4 &amp;&amp; i2 &gt; 0){
            ds_grid_set(race_grid, i, i2, NPC_id[i2 - 1].lap);
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Check for Positions
var i;

for(i = 0; i &lt; 5; i++){
    for(i2 = 0; i2 &lt; 4; i2++){
        if(i = 0 &amp;&amp; i2 = 0){
            ds_grid_set(race_grid, i, i2, player_id);
        }else if(i = 0 &amp;&amp; i2 &gt; 0){
            ds_grid_set(race_grid, i, i2, NPC_id[i2 - 1]);
        }else if(i = 1 &amp;&amp; i2 = 0){
            ds_grid_set(race_grid, i, i2, "Player 1");
        }else if(i = 1 &amp;&amp; i2 &gt; 0){
            ds_grid_set(race_grid, i, i2, string(NPC_name[i2]));
        }else if(i = 2 &amp;&amp; i2 = 0){
            ds_grid_set(race_grid, i, i2, player_id.current_distance);
        }else if(i = 2 &amp;&amp; i2 &gt; 0){
            ds_grid_set(race_grid, i, i2, NPC_id[i2 - 1].current_distance);
        }else if(i = 3 &amp;&amp; i2 = 0){
            ds_grid_set(race_grid, i, i2, player_id.current_node);
        }else if(i = 3 &amp;&amp; i2 &gt; 0){
            ds_grid_set(race_grid, i, i2, NPC_id[i2 - 1].current_node);
        }else if(i = 4 &amp;&amp; i2 = 0){
            ds_grid_set(race_grid, i, i2, player_id.lap);
        }else if(i = 4 &amp;&amp; i2 &gt; 0){
            ds_grid_set(race_grid, i, i2, NPC_id[i2 - 1].lap);
        }
    }
}


//This will work. Just have to figure it out. Right now it seems to sort, but incorrectly

var check_number;
var check_count;

for(i = 1; i &lt; 4; i++){
    race_grid_new = race_grid;
    check_number = ds_grid_get(race_grid, 4, i);
    check_count = i;
    
    while(check_count &gt; 0 and ds_grid_get(race_grid, 4, check_count - 1) &lt; check_number){
        ds_grid_set_grid_region(race_grid_new, race_grid, 0, check_count, 4, check_count, 0, check_count - 1);
        ds_grid_set_grid_region(race_grid_new, race_grid, 0, check_count -1, 4, check_count - 1, 0, check_count);
        race_grid = race_grid_new;
        check_number = ds_grid_get(race_grid, 4, i);
        check_count--;
    }
}


//If We can't get the sort function to work above, we can take matters into our own hands below
/*
for(i = 0; i &lt; 4; i++){
    if(ds_grid_get(race_grid, 4, i + 1) &gt; ds_grid_get(race_grid, 4, i)){
        ds_grid_set_grid_region(race_grid_new, race_grid, 0, i, 4, i, 0, i);
        ds_grid_set_grid_region(race_grid_new, race_grid, 0, i + 1, 4, i + 1, 0, i + 1);
    }else if(ds_grid_get(race_grid, 4, i + 1) = ds_grid_get(race_grid, 4, i)){
        if(ds_grid_get(race_grid, 3, i + 1) &gt; ds_grid_get(race_grid, 3, i)){
            ds_grid_set_grid_region(race_grid_new, race_grid, 0, i, 3, i, 0, i);
            ds_grid_set_grid_region(race_grid_new, race_grid, 0, i + 1, 3, i + 1, 0, i + 1);
        }
    }
}
*/


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/*
var i;
var i2;

for(i = 0; i &lt; 5; i++){
    for(i2 = 0; i2 &lt; 4; i2++){
        draw_text(view_xview + (600 + (i * 100)), view_yview + (i2 * 15), ds_grid_get(race_grid, i, i2));
    }
}
*/


//for (i = 0; i &lt; instance_number(obj_NPC); i += 1){
//    draw_text(view_xview + 600, view_yview + (15 * i), string(NPC_id[i]));
//}

//draw_text(view_xview + 600, view_yview + 45, string(player_id));

//for (i = 0; i &lt; instance_number(obj_NPC); i += 1){
//    draw_text(view_xview + 650, view_yview + (15 * i), NPC_name[i]);
//}

//draw_text(view_xview + 650, view_yview + 45, string(player_id));
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
