<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_Car</spriteName>
  <solid>-1</solid>
  <visible>-1</visible>
  <depth>-10</depth>
  <persistent>0</persistent>
  <parentName>obj_Car_Base</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Initialize Player Specific Traits

event_inherited();

phy_position_x = 1850;
phy_position_y = 250;

laps_complete = 0;

player_inst = id;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Player Input

//Left Turn
if(gamepad_axis_value(0, gp_axislh) &lt; -0.3){
    turn_weight = (phy_speed / 4) * gamepad_axis_value(0, gp_axislh);
    turn_weight_abs = turn_weight;
    
    if(abs(turn_weight_abs) &gt; 2.5){turn_weight = -2.5;}
    if(!accel_reverse){
        phy_rotation += turn_weight;
    }else if(accel_reverse){
        phy_rotation += -turn_weight;
    }
}

//Right Turn
if(gamepad_axis_value(0, gp_axislh) &gt; 0.3){
    turn_weight = (phy_speed / 4) * gamepad_axis_value(0, gp_axislh)
    turn_weight_abs = turn_weight;
    
    if(abs(turn_weight_abs) &gt; 2.5){turn_weight = 2.5;}
    
    if(!accel_reverse){
        phy_rotation += turn_weight;
    }else if(accel_reverse){
        phy_rotation += -turn_weight;
    }
}

//Accelerate
gas_value = gamepad_button_value(0, gp_shoulderrb);


if(gas_value &gt; 0.1){
    forward_x = lengthdir_x(2800, -phy_rotation - 270) * gas_value;
    forward_y = lengthdir_y(2800, -phy_rotation - 270) * gas_value;
    
    physics_apply_force(x, y, forward_x, forward_y);
    accel_reverse = 0;
}

//Brake
gas_value = gamepad_button_value(0, gp_shoulderlb);

if(gas_value &gt; 0.1){
    if(accel_reverse = 0){
        if(phy_speed &gt; 0.1){
            phy_speed_x = lerp(phy_speed_x, 0 , 0.05);
            phy_speed_y = lerp(phy_speed_y, 0, 0.05);
        }else if(phy_speed &lt; 0.1){accel_reverse = 1;}
    }else if(accel_reverse = 1){
        forward_x = lengthdir_x(1800, -phy_rotation - 270) * gas_value;
        forward_y = lengthdir_y(1800, -phy_rotation - 270) * gas_value;
        
        physics_apply_force(x, y, -forward_x, -forward_y);
    }
}

//Take a Screenshot
if(gamepad_button_value(0, gp_shoulderr)){
    screen_save(working_directory + "shot.png");
}

//Parent Inherit
event_inherited();
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///View Control
car_speed = phy_speed;

if(car_speed &gt; 3){car_speed = 3;}

res_width = 640 * ((car_speed / 2) + 1);
res_height = 360 * ((car_speed / 2) + 1);

bord_width = 320 * ((car_speed / 2) + 1);
bord_height = 180 * ((car_speed / 2) + 1);

view_wview = res_width;
view_hview = res_height;

view_hborder = bord_width;
view_vborder = bord_height;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Position Check

// Needs WORK. Need to figure out how to get distance between NPC's/Player and 
// the next point

//for(xp = 0; xp &lt; 3; xp++){
//    for(yp = 0; yp &lt; 4; yp++){           
//        if(xp = 0){
//            ds_grid_add(rce_grid, xp, yp, "Player " + string(yp + 1));
//        }else if(xp = 1 &amp;&amp; yp &lt; 3){
//            ds_grid_add(rce_grid, xp, yp, NPC_id[yp]);
//        }else if(xp = 1 &amp;&amp; yp = 3){
//            ds_grid_add(rce_grid, xp, yp, player_id);
//        }else if(xp = 2 &amp;&amp; yp &lt; 3){
//Problem Lines            //curry_distance = sqrt((NPC_id[yp].x - NPC_id[yp].y)^2 - (node_array[current_node, 0] - node_array[current_node, 1])^2); 
//Problem Lines            //ds_grid_add(rce_grid, xp, yp, curry_distance);
//        }else if(xp = 2 &amp;&amp; yp = 3){
//Problem Lines            //curry_distance = sqrt((player_id.x - player_id.y)^2 - (node_array[current_node, 0] - node_array[current_node, 1])^2); 
//Problem Lines            //ds_grid_add(rce_grid, xp, yp, curry_distance);      
//        }
//    }
//}

// ds_grid_sort(race_grid, 0, 1);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

//draw_text(view_xview + 500, view_yview, object_index);
//draw_text(view_xview + 1000, view_yview, "1. " + string(ds_grid_get(rce_grid, 2, 0)));
//draw_text(view_xview + 1000, view_yview + 15, "2. " + string(ds_grid_get(rce_grid, 2, 1)));
//draw_text(view_xview + 1000, view_yview + 30, "3. " + string(ds_grid_get(rce_grid, 2, 2)));
//draw_text(view_xview + 1000, view_yview + 45, "4. " + string(ds_grid_get(rce_grid, 2, 3)));
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>-1</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>1</PhysicsObjectShape>
  <PhysicsObjectDensity>0.300000011920929</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.0799999982118607</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>5</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.5</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>-1,-1</point>
    <point>71,-1</point>
    <point>71,131</point>
    <point>-1,131</point>
  </PhysicsShapePoints>
</object>
